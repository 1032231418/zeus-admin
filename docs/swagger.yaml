definitions:
  model.User:
    properties:
      created_time:
        example: 2019-07-10 0:39
        type: string
      department_id:
        example: 1
        type: integer
      email:
        example: xxxx@hotmail.com
        type: string
      faceicon:
        example: http://xxx.com
        type: string
      id:
        example: 1
        type: integer
      mobile:
        example: "186000000"
        type: string
      realname:
        example: 黄梧桐
        type: string
      sex:
        example: 1
        type: integer
      status:
        example: 1
        type: integer
      title:
        example: title
        type: string
      updated_time:
        example: 2019-07-10 0:39
        type: string
      username:
        example: wutongci
        type: string
    type: object
host: api.bullteam.cn
info:
  contact:
    email: support@bullteam.cn
    name: API Support
  description: Zeus 宙斯权限后台
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Zeus 宙斯权限后台 API
  version: V0.1
paths:
  /test:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{""}}'
          schema:
            type: string
      summary: 测试
  /v1/account/domains:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"result":[]}}'
          schema:
            type: string
      summary: 获取用户管理域
  /v1/account/info:
    get:
      consumes:
      - application/json
      description: 登陆用户信息接口
      parameters:
      - description: 用户ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"id":1,"name":"wutong"}}'
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: 登录用户信息
  /v1/account/password:
    put:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"id":1}}'
          schema:
            type: string
      summary: 更新个人密码
  /v1/api/roles:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"result":[...],"total":1}}'
          schema:
            type: string
      summary: 角色列表[分页+搜索]
  /v1/api/roles/:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"id":1,"name":"test"}}'
          schema:
            type: string
      summary: 角色信息
  /v1/api/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"id":1}}'
          schema:
            type: string
      summary: 新增用户
  /v1/api/users/:
    delete:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"id":1}}'
          schema:
            type: string
      summary: 删除用户
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"id":1,"name":"wutong"}}'
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: '{"code":10004,"msg": "用户信息不存在"}'
          schema:
            type: string
      summary: 用户信息
    put:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"id":1}}'
          schema:
            type: string
      summary: 更新用户密码
  /v1/domains:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"id":1}}'
          schema:
            type: string
      summary: 新增应用
  /v1/domains/:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"id":1,"name":"test"}}'
          schema:
            type: string
      summary: 项目信息
swagger: "2.0"
